Install laravel

-install xampp fist

-after download composer and set up select browser C:\xampp\php

-after that, find "edit the system environment variable" and click the button of" environment variables",after click in find the system variables of "path" to edit
 make sure C:\xampp\php include the path if not click new to add it

-open the vscode and change to the xampp C:\xampp\htdocs to run
 
-input
 composer global require laravel/installer

-create project file
composer create-project --prefer-dist laravel/laravel filename

git dowload

https://www.simplilearn.com/tutorials/git-tutorial/git-installation-on-windows

git branch新创分支
git常用命令
https://www.simplilearn.com/tutorials/git-tutorial/git-installation-on-windows

laravel 9 新东西
1.route 新写法
Route::controller(NameController::class)->group(function(){
Route::get('/pots',''index);
})

2.str（）helper function
Str：：of('hello')->upper() /return str('hello') ----这个会print hello
->slug 空格位置出现-

throw new \Exception('whoop') ----error出现这个

Blade::render print string

php artisan make:controller NameController --resource        -----auto create controller function
php artisan make：controller NameController --resource --model=Name     ------set好controller 与 model 然后edit 那边自动放（Name $name）
php artisan make: model Name -m      ----这个会出现migrate 和 model

softdelet
laravel 9 support softdelete (Illuminate\Database\Eloquent\SoftDeletes)trait

在post model 加入Illuminate\Database\Eloquent\SoftDeletes   和   use softdelete

controller例子
public function trashedDelete(id){
   $post=Post::onlyTrashed()->findOrFail($id);
   $post->forceDelete();完全delete
   return back();
}

public function trashedDelete(id){
   $post=Post::onlyTrashed()->findOrFail($id);
   $post->restore();重新保存
   return back();
}

抓auth去向
app/Http/Controllers/Middleware/RedirectIfAuthenticated.php

class RedirectIfAuthenticated
{
    public function handle($request, Closure $next, $guard = null)
    {
        if ($guard == "admin" && Auth::guard($guard)->check()) {
            return redirect('/admin');
        }
        if ($guard == "blogger" && Auth::guard($guard)->check()) {
            return redirect('/blogger');
        }
        if (Auth::guard($guard)->check()) {
            return redirect('/home');
        }

        return $next($request);
    }
}

抓权限事件
app/Exceptions/Handler.php

use Exception;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Auth\AuthenticationException;
use Auth;
class Handler extends ExceptionHandler
{
    protected function unauthenticated($request, AuthenticationException $exception)
    {
        if ($request->expectsJson()) {
            return response()->json(['error' => 'Unauthenticated.'], 401);
        }
        if ($request->is('admin') || $request->is('admin/*')) {
            return redirect()->guest('/login/admin');
        }
        if ($request->is('blogger') || $request->is('blogger/*')) {
            return redirect()->guest('/login/blogger');
        }
        return redirect()->guest(route('login'));
    }
}


logout事件


public function logout(Request $request)
{
    Auth::logout();
 
    $request->session()->invalidate();
 
    $request->session()->regenerateToken();
 
    return redirect('/');
}

Setup Guard 方便辨认auth
去config\auth.php
找到↓
return [
 
    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],
 
 
    'guards' => [
        'web' => [ //Laravel default guard name
            'driver' => 'session', 
            'provider' => 'users', // Laravel authenticate table/model name
        ],
         
        'admin' => [  //Our Custom guard name "admin"
            'driver' => 'session',  
            'provider' => 'admins',  // Our authenticate table/model name
        ],
 
        'api' => [
            'driver' => 'token',
            'provider' => 'users',
        ],
 
         
    ],
 
    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\User::class, //Laravel guard model slug
        ],
 
        'admins' => [  
            'driver' => 'eloquent',  //Our custom eloquent
            'model' => App\Model\Admin\Admin::class, //Our custom guard model slug
        ],
    ],
 
    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_resets',
            'expire' => 60,
        ],
 
        'admins' => [  // And here also
            'provider' => 'admins',
            'table' => 'password_resets',
            'expire' => 60,
        ],
    ],
 
];


